name: Linux CI

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-22.04
    container: alpine:3.12
    strategy:
      matrix:
        ghc: ["9.8.2"]
        cabal: ["3.10.3.0"]

    steps:
      - name: Install system dependencies
        run: |
          apk add --no-cache curl gcc g++ gmp-dev ncurses-dev libffi-dev make xz gzip tar perl git bash sudo binutils-gold
          apk add --no-cache zlib zlib-dev zlib-static gmp gmp-dev ncurses-static
          
      - uses: haskell/ghcup-setup@v1

      - name: Install GHC and cabal
        run: |
          ghcup install ghc ${{ matrix.ghc }}
          ghcup set ghc ${{ matrix.ghc }}
          ghcup install cabal ${{ matrix.cabal }}

      - name: Update cabal cache
        run: cabal update
        shell: bash

      - name: Checkout code  
        run: git clone https://codeberg.org/uzu/zwirn
      
      - name: Dry run of build
        run: | 
              cd zwirn 
              cabal build all --dry-run --ghc-options='-split-sections -optl-static'

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ matrix.ghc-version }}-cabal-${{ matrix.cabal-version }}
        with:
          path: /home/runner/.cabal/store
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        # If we had an exact cache hit, the dependencies will be up to date.
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
              cd zwirn
              cabal build all --only-dependencies --ghc-options='-split-sections -optl-static'

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: actions/cache/save@v4
        # If we had an exact cache hit, trying to save the cache would error because of key clash.
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: /home/runner/.cabal/store
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: cabal build
        run: |
             cd zwirn
             cabal build all --enable-executable-stripping --enable-executable-static --ghc-options='-split-sections -optl-static'

      - name: set build location to var
        run: |
             cd zwirn
             echo "bin_path=$(cabal list-bin zwirnzi)" >> "$GITHUB_ENV"

      - name: make directory
        run: mkdir build

      - name: move executable
        run: mv "$bin_path" build/zwirnzi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/zwirnzi
